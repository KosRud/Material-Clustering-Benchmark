{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Datasets\n\nhttp://cs.joensuu.fi/sipu/datasets/\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "# Init\n"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const { Plotly } = require('node-kernel');"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "import fs from 'fs';\n\nfunction loadOrGenerateReport({ loadFromFile, filePath, generationFunc }) {\n    if (loadFromFile) {\n        return JSON.parse(fs.readFileSync(filePath, 'utf-8'));\n    } else {\n        const result = generationFunc();\n        fs.writeFileSync(filePath, JSON.stringify(result, null, 2), {\n            flag: 'w',\n            encoding: 'utf-8',\n        });\n        return result;\n    }\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const sharedLayout = {\n    width: 600,\n    height: 400,\n    font: {\n        size: 15,\n    },\n    margin: {\n        l: 80,\n        r: 4,\n        b: 40,\n        t: 50, // for title\n    },\n};"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "# Benchmark convergence"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "import fs from 'fs';\nimport assert from 'assert/strict';\nimport loadDataset from './loadDataset';\nimport { KMeans, RandomSwap, KHarmonicMeans } from './clustering/clustering';\nimport path from 'path';\nimport copy from 'deepcopy';\n\nconst benchmarkConvergenceResults = loadOrGenerateReport({\n    loadFromFile: true,\n    filePath: './results/convergence.json',\n    generationFunc: () => {\n        const numCenters = 6,\n            maxSamples = 5000,\n            numInits = 4,\n            numRandomSwapRepsPerInit = 4,\n            dimensions = 2,\n            numIterations = 10;\n\n        let results = [];\n\n        const inits =\n            // array of initializations\n            Array(numInits)\n                .fill()\n                .map(() =>\n                    //array of cluster centers\n                    Array(numCenters)\n                        .fill()\n                        .map(() =>\n                            // iterate over coordinates\n                            Array(dimensions)\n                                .fill()\n                                .map(\n                                    // uniform random initialization for each coordinate\n                                    () => Math.random()\n                                )\n                        )\n                );\n\n        const datasetsPath = './datasets/',\n            filePaths = fs\n                .readdirSync(datasetsPath)\n                .map((filePath) => path.join(datasetsPath, filePath));\n\n        const arrLaunchParams = [];\n\n        for (const filePath of filePaths) {\n            const samples = loadDataset({\n                path: filePath,\n                maxSamples: maxSamples,\n            });\n\n            assert.equal(samples[0].length, dimensions);\n\n            for (const initCenters of inits) {\n                arrLaunchParams.push({\n                    samples: samples,\n                    initCenters: initCenters,\n                });\n            }\n        }\n\n        let lastPercent = 0;\n\n        for (const launchId in arrLaunchParams) {\n            const { samples, initCenters } = arrLaunchParams[launchId];\n\n            results = results.concat(\n                new KMeans({\n                    samples: samples,\n                    attribution: samples.map(() => 0),\n                    centers: copy(initCenters),\n                    numIterations: numIterations,\n                }).runClustering()\n            );\n\n            results = results.concat(\n                new KHarmonicMeans({\n                    samples: samples,\n                    attribution: samples.map(() => 0),\n                    centers: copy(initCenters),\n                    numIterations: numIterations,\n                    weights: samples.map(() => initCenters[0].map(() => -1)),\n                }).runClustering()\n            );\n\n            for (const _ of Array(numRandomSwapRepsPerInit)) {\n                results = results.concat(\n                    new RandomSwap({\n                        samples: samples,\n                        attribution: samples.map(() => 0),\n                        centers: copy(initCenters),\n                        numIterations: numIterations,\n                    }).runClustering()\n                );\n            }\n\n            const percentFinished = (launchId / arrLaunchParams.length) * 100;\n            if (percentFinished > lastPercent + 1) {\n                console.log(\n                    `progress: ${percentFinished.toFixed(2).padStart(5)}%    ${\n                        new Date().toString().split(' ')[4]\n                    }`\n                );\n\n                lastPercent = percentFinished;\n            }\n        }\n\n        console.log('');\n        console.log('finished!');\n\n        return results;\n    },\n});\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Report format\n"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "console.log(JSON.stringify(benchmarkConvergenceResults[0], null, 2));"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  \"algorithm\": \"Random swap\",",
                                "  \"numIterations\": 2,",
                                "  \"variance\": 0.023889971713300387,",
                                "  \"initVectorId\": 0",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                "import merge from 'deepmerge';\n\n{\n    const algorithmOptions = Array.from(\n        new Set(benchmarkConvergenceResults.map((result) => result.algorithm))\n    );\n\n    // sqrt(variance)\n    {\n        const data = algorithmOptions.map((algorithm) => {\n            const subsetAlgorithm = benchmarkConvergenceResults.filter(\n                (result) => result.algorithm == algorithm\n            );\n\n            const numIterationsOptions = Array.from(\n                new Set(subsetAlgorithm.map((result) => result.numIterations))\n            );\n\n            return {\n                x: numIterationsOptions,\n                y: numIterationsOptions.map((numIterations) => {\n                    const subsetNumItrations = subsetAlgorithm.filter(\n                        (result) => result.numIterations == numIterations\n                    );\n\n                    return (\n                        subsetNumItrations\n                            .map((result) => result.variance ** 0.5)\n                            .reduce((a, b) => a + b) / subsetNumItrations.length\n                    );\n                }),\n                name: algorithm,\n                type: 'scatter',\n                mode: 'lines',\n            };\n        });\n\n        const layout = merge(sharedLayout, {\n            yaxis: {\n                title: `RMSE`,\n            },\n            xaxis: {\n                title: 'number of iterations',\n            },\n            title: {\n                text: `aggregated RMSE`,\n            },\n        });\n\n        Plotly.newPlot('', data, layout);\n    }\n\n    // change of variance\n    {\n        const sharedData = {\n            type: 'scatter',\n            mode: 'lines',\n        };\n\n        const data = merge(\n            sharedData,\n            algorithmOptions.map((algorithm) => {\n                const subsetAlgorithm = benchmarkConvergenceResults.filter(\n                    (result) => result.algorithm == algorithm\n                );\n\n                const numIterationsOptions = Array.from(\n                    new Set(\n                        subsetAlgorithm.map((result) => result.numIterations)\n                    )\n                );\n\n                const variancePerIteration = numIterationsOptions.map(\n                    (numIterations) => {\n                        return {\n                            numIterations: numIterations,\n                            variance: (() => {\n                                const subsetNumIterations =\n                                    subsetAlgorithm.filter(\n                                        (result) =>\n                                            result.numIterations ==\n                                            numIterations\n                                    );\n                                return (\n                                    subsetNumIterations\n                                        .map((result) => result.variance)\n                                        .reduce((a, b) => a + b) /\n                                    subsetNumIterations.length\n                                );\n                            })(),\n                        };\n                    }\n                );\n                for (const index of [...variancePerIteration.keys()].splice(\n                    1\n                )) {\n                    variancePerIteration[index].deltaVariance =\n                        variancePerIteration[index - 1].variance -\n                        variancePerIteration[index].variance;\n                }\n\n                variancePerIteration.shift();\n\n                return {\n                    x: variancePerIteration.map(\n                        (record) => record.numIterations\n                    ),\n                    y: variancePerIteration.map(\n                        (record) => record.deltaVariance\n                    ),\n                    name: algorithm,\n                    type: 'scatter',\n                    mode: 'lines',\n                };\n            })\n        );\n\n        data.push(\n            merge(\n                sharedData,\n                (() => {\n                    const numIterationsOptions = Array.from(\n                        new Set(\n                            benchmarkConvergenceResults\n                                .filter(\n                                    (result) => result.algorithm == 'K-means'\n                                )\n                                .map((result) => result.numIterations)\n                        )\n                    );\n\n                    return {\n                        x: numIterationsOptions,\n                        y: numIterationsOptions.map(() => 1e-4),\n                        name: 'stop condition',\n                    };\n                })()\n            )\n        );\n\n        const layout = merge(sharedLayout, {\n            yaxis: {\n                title: { text: `Δ MSE`, standoff: 20 },\n            },\n            xaxis: {\n                title: 'number of iterations',\n            },\n            title: {\n                text: `MSE change between iterations`,\n            },\n        });\n\n        Plotly.newPlot('', data, layout);\n    }\n}\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.ts.notebook.plotly+json",
                            "value": {
                                "requestId": "x431a36825d8441b1954a4f6bd20d41dc",
                                "type": "generatePlot",
                                "ele": "",
                                "data": [
                                    {
                                        "x": [
                                            2,
                                            4,
                                            6,
                                            8,
                                            10,
                                            12,
                                            14,
                                            16,
                                            18,
                                            20,
                                            22,
                                            24,
                                            26,
                                            28,
                                            30,
                                            32,
                                            34,
                                            36,
                                            38,
                                            40,
                                            42,
                                            44,
                                            46,
                                            48,
                                            50,
                                            52,
                                            54,
                                            56,
                                            58,
                                            60,
                                            62,
                                            64,
                                            66,
                                            68,
                                            70,
                                            72,
                                            74,
                                            76,
                                            78,
                                            80,
                                            82,
                                            84,
                                            86,
                                            88,
                                            90,
                                            92,
                                            94,
                                            96,
                                            98,
                                            100
                                        ],
                                        "y": [
                                            0.16221917613045989,
                                            0.1509442876795743,
                                            0.14667064677421576,
                                            0.14446751694372956,
                                            0.1430195503783583,
                                            0.14204756306097796,
                                            0.1413266121437133,
                                            0.14075703799472153,
                                            0.14030011814618137,
                                            0.1399277355702534,
                                            0.1396036294051756,
                                            0.13933190949597804,
                                            0.13910061986473857,
                                            0.1388880253445367,
                                            0.1387147921540273,
                                            0.13855120289932657,
                                            0.1384088486287449,
                                            0.13828429362694444,
                                            0.13817245137373405,
                                            0.13806062653312598,
                                            0.1379643370276566,
                                            0.13787572365251796,
                                            0.13779411595215463,
                                            0.13771945874653432,
                                            0.13765022880275288,
                                            0.13758595617951552,
                                            0.13752484414756136,
                                            0.13746668625120276,
                                            0.1374171935209391,
                                            0.13736746627870727,
                                            0.13731536994509466,
                                            0.13727459178467238,
                                            0.13723409286250185,
                                            0.1371952562900115,
                                            0.13715648097995647,
                                            0.13712290459643664,
                                            0.13709392553956518,
                                            0.13706664825858716,
                                            0.1370375853785519,
                                            0.13700926585038606,
                                            0.13698536434743774,
                                            0.13696098428939105,
                                            0.13693647714551285,
                                            0.1369150783731678,
                                            0.13689361074667156,
                                            0.13687082989509575,
                                            0.13685092257739812,
                                            0.13683219086877807,
                                            0.13681304916787154,
                                            0.13679782244404043
                                        ],
                                        "name": "Random swap",
                                        "type": "scatter",
                                        "mode": "lines"
                                    },
                                    {
                                        "x": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31,
                                            32,
                                            33,
                                            34,
                                            35,
                                            36,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            43,
                                            44,
                                            45,
                                            46,
                                            47,
                                            48,
                                            49,
                                            50,
                                            51,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            59,
                                            60,
                                            61,
                                            62,
                                            63,
                                            64,
                                            65,
                                            66,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            75,
                                            76,
                                            77,
                                            78,
                                            79,
                                            80,
                                            81,
                                            82,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            91,
                                            92,
                                            93,
                                            94,
                                            95,
                                            96,
                                            97,
                                            98,
                                            99,
                                            100
                                        ],
                                        "y": [
                                            0.19056281508615674,
                                            0.1644103408554545,
                                            0.1551981120833477,
                                            0.15081842787837144,
                                            0.1484762317101036,
                                            0.14723666005781208,
                                            0.14636535823373673,
                                            0.14572490706769764,
                                            0.14527825937641356,
                                            0.14490545594551554,
                                            0.14462978312739394,
                                            0.1444310509717345,
                                            0.14426377664795453,
                                            0.1441177436216089,
                                            0.1439930465732207,
                                            0.1439022213005373,
                                            0.1438126405360367,
                                            0.14371969640941978,
                                            0.1436498031309824,
                                            0.14360329021350235,
                                            0.14356457573504863,
                                            0.14352618348118423,
                                            0.1434926960965342,
                                            0.14347132565144646,
                                            0.14345043079717915,
                                            0.1434309175610456,
                                            0.14341671143346868,
                                            0.1434046330327302,
                                            0.14339361584495908,
                                            0.14338642059979118,
                                            0.1433813608964045,
                                            0.14337333794422716,
                                            0.14336691717943806,
                                            0.14336307282641106,
                                            0.1433592429221461,
                                            0.14335570525963767,
                                            0.14335344217019227,
                                            0.1433521801717723,
                                            0.14335116106776352,
                                            0.14334930323049574,
                                            0.14334453003271844,
                                            0.1433394533134141,
                                            0.1433367916831994,
                                            0.1433355449720321,
                                            0.14333466083459834,
                                            0.1433338320235134,
                                            0.14333313654746804,
                                            0.1433327485110547,
                                            0.1433325374440439,
                                            0.14333233160552677,
                                            0.1433321092456112,
                                            0.14333191086065783,
                                            0.14333167480104841,
                                            0.1433312940404567,
                                            0.14333084652320627,
                                            0.14333031566355595,
                                            0.14332984914746327,
                                            0.14332939144087278,
                                            0.14332903074920395,
                                            0.14332881543759748,
                                            0.14332867959716114,
                                            0.14332859372509826,
                                            0.14332852046091205,
                                            0.143328438990129,
                                            0.14332839537054193,
                                            0.14332838075328205,
                                            0.14332836763221993,
                                            0.1433283513259069,
                                            0.14332833620568763,
                                            0.14332832665498713,
                                            0.14332832317854916,
                                            0.14332832142218316,
                                            0.14332831775039165,
                                            0.14332831436196936,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568,
                                            0.14332831234367568
                                        ],
                                        "name": "K-means",
                                        "type": "scatter",
                                        "mode": "lines"
                                    },
                                    {
                                        "x": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31,
                                            32,
                                            33,
                                            34,
                                            35,
                                            36,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            43,
                                            44,
                                            45,
                                            46,
                                            47,
                                            48,
                                            49,
                                            50,
                                            51,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            59,
                                            60,
                                            61,
                                            62,
                                            63,
                                            64,
                                            65,
                                            66,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            75,
                                            76,
                                            77,
                                            78,
                                            79,
                                            80,
                                            81,
                                            82,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            91,
                                            92,
                                            93,
                                            94,
                                            95,
                                            96,
                                            97,
                                            98,
                                            99,
                                            100
                                        ],
                                        "y": [
                                            0.19634643672186683,
                                            0.1622294441603488,
                                            0.15123756543907987,
                                            0.14616376963426705,
                                            0.14377209094461743,
                                            0.14265715663852618,
                                            0.1419490625526827,
                                            0.14146508771256874,
                                            0.14112470995666979,
                                            0.14084357563800698,
                                            0.14055734902471087,
                                            0.14032481848421863,
                                            0.1401399846165948,
                                            0.13998995083610355,
                                            0.13985797670871716,
                                            0.1397398918555273,
                                            0.13963285119520927,
                                            0.1395460250468794,
                                            0.13948033058717305,
                                            0.1394208338477512,
                                            0.1393673972564349,
                                            0.1393191279793703,
                                            0.1392678272957814,
                                            0.13922491968074976,
                                            0.139187115975523,
                                            0.13915187626228426,
                                            0.1391144960776697,
                                            0.13907136873706677,
                                            0.13903148130133977,
                                            0.13900138137874504,
                                            0.13897295067569887,
                                            0.13894900626234827,
                                            0.13892784255630772,
                                            0.13890977419764267,
                                            0.13889467666745822,
                                            0.13887807182694656,
                                            0.13886188377165268,
                                            0.13884527142687247,
                                            0.13882812284190213,
                                            0.13880950988126728,
                                            0.13879121023538493,
                                            0.13877804949437642,
                                            0.13876613337897883,
                                            0.1387551045584637,
                                            0.13874440982068978,
                                            0.13873357792657576,
                                            0.1387231895096292,
                                            0.13871349924822554,
                                            0.13870328154799777,
                                            0.13869491237964673,
                                            0.1386870168284907,
                                            0.1386817230347891,
                                            0.13867548682717076,
                                            0.1386699207815015,
                                            0.13866578119278705,
                                            0.1386624065806749,
                                            0.138659602473463,
                                            0.13865803142370836,
                                            0.13865402693813325,
                                            0.13864981717789163,
                                            0.1386452376736211,
                                            0.1386442214001062,
                                            0.13864367419452042,
                                            0.13864269441020965,
                                            0.13864113697478325,
                                            0.1386384873326232,
                                            0.13863591717959364,
                                            0.13863295027385622,
                                            0.13862852468291453,
                                            0.13862556622085434,
                                            0.1386217424613617,
                                            0.13861827891379794,
                                            0.13861348085946634,
                                            0.13860925788883477,
                                            0.13860668048919714,
                                            0.1386054904064394,
                                            0.1386041653334156,
                                            0.13860097687144393,
                                            0.13859696965681267,
                                            0.13859476590056194,
                                            0.13859268708993605,
                                            0.13859054892665393,
                                            0.1385885785350956,
                                            0.13858674732935605,
                                            0.13858576188427438,
                                            0.1385840207934616,
                                            0.13858239539958186,
                                            0.13858151077040484,
                                            0.1385806858363869,
                                            0.1385805869555064,
                                            0.13857912260880503,
                                            0.13857765558146798,
                                            0.13857649371686867,
                                            0.13857572012941666,
                                            0.13857533962210544,
                                            0.13857427475034995,
                                            0.1385729516539388,
                                            0.13857118770834892,
                                            0.13856901471525832,
                                            0.1385669087117062
                                        ],
                                        "name": "K-harmonic means",
                                        "type": "scatter",
                                        "mode": "lines"
                                    }
                                ],
                                "layout": {
                                    "width": 600,
                                    "height": 400,
                                    "font": {
                                        "size": 15
                                    },
                                    "margin": {
                                        "l": 80,
                                        "r": 4,
                                        "b": 40,
                                        "t": 50
                                    },
                                    "yaxis": {
                                        "title": "RMSE"
                                    },
                                    "xaxis": {
                                        "title": "number of iterations"
                                    },
                                    "title": {
                                        "text": "aggregated RMSE"
                                    }
                                }
                            }
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "application/vnd.ts.notebook.plotly+json",
                            "value": {
                                "requestId": "x431a36825d8441b1954a4f6bd20d41dc",
                                "type": "generatePlot",
                                "ele": "",
                                "data": [
                                    {
                                        "x": [
                                            4,
                                            6,
                                            8,
                                            10,
                                            12,
                                            14,
                                            16,
                                            18,
                                            20,
                                            22,
                                            24,
                                            26,
                                            28,
                                            30,
                                            32,
                                            34,
                                            36,
                                            38,
                                            40,
                                            42,
                                            44,
                                            46,
                                            48,
                                            50,
                                            52,
                                            54,
                                            56,
                                            58,
                                            60,
                                            62,
                                            64,
                                            66,
                                            68,
                                            70,
                                            72,
                                            74,
                                            76,
                                            78,
                                            80,
                                            82,
                                            84,
                                            86,
                                            88,
                                            90,
                                            92,
                                            94,
                                            96,
                                            98,
                                            100
                                        ],
                                        "y": [
                                            0.0036598341929833175,
                                            0.0013057045311620809,
                                            0.0006482455278298514,
                                            0.000416995927634594,
                                            0.0002754681697803539,
                                            0.00020167260684283636,
                                            0.0001584399854192113,
                                            0.0001267968510474081,
                                            0.0001027929783238811,
                                            0.00008946647680954309,
                                            0.00007490763999804667,
                                            0.00006295480067535289,
                                            0.00005777867856457744,
                                            0.00004684534450083433,
                                            0.00004465004627499103,
                                            0.0000384625596846315,
                                            0.00003391749737274852,
                                            0.000030223968754999192,
                                            0.000030097211025335857,
                                            0.00002630999923747268,
                                            0.000024003172489180796,
                                            0.000022245391062939573,
                                            0.000020360735913615285,
                                            0.000018805872499118303,
                                            0.0000173524584364676,
                                            0.000016636566015203885,
                                            0.00001591143111553603,
                                            0.00001347687182869095,
                                            0.000013405618487057763,
                                            0.00001397735699786365,
                                            0.000011038712887666974,
                                            0.000010992084983958705,
                                            0.000010571436086785624,
                                            0.000010463890234301693,
                                            0.000009030906915952208,
                                            0.000007890531939419576,
                                            0.000007521801754999113,
                                            0.0000079281146282556,
                                            0.000007599686778346493,
                                            0.000006645768080033171,
                                            0.000006654593164463762,
                                            0.000006702710110103455,
                                            0.000005813952684848023,
                                            0.000005881147525546582,
                                            0.00000611500111577859,
                                            0.000005451501976762307,
                                            0.000005115987461886545,
                                            0.000005262935785441125,
                                            0.000004228467650638917
                                        ],
                                        "name": "Random swap",
                                        "type": "scatter",
                                        "mode": "lines"
                                    },
                                    {
                                        "x": [
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31,
                                            32,
                                            33,
                                            34,
                                            35,
                                            36,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            43,
                                            44,
                                            45,
                                            46,
                                            47,
                                            48,
                                            49,
                                            50,
                                            51,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            59,
                                            60,
                                            61,
                                            62,
                                            63,
                                            64,
                                            65,
                                            66,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            75,
                                            76,
                                            77,
                                            78,
                                            79,
                                            80,
                                            81,
                                            82,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            91,
                                            92,
                                            93,
                                            94,
                                            95,
                                            96,
                                            97,
                                            98,
                                            99,
                                            100
                                        ],
                                        "y": [
                                            0.009524218190054178,
                                            0.0030619595484609567,
                                            0.0013882297948838718,
                                            0.0007169061109635437,
                                            0.00037515286691271535,
                                            0.00025929763357841057,
                                            0.00018982967783926288,
                                            0.00013154433762824908,
                                            0.00010935950474895775,
                                            0.00008072461418714635,
                                            0.000057596906137682286,
                                            0.000048126024764779535,
                                            0.000041843403630552334,
                                            0.00003539610157298617,
                                            0.00002561690315200371,
                                            0.000025510158869163774,
                                            0.00002676193848903663,
                                            0.000020197475390396763,
                                            0.00001349841721917655,
                                            0.000011123006970783361,
                                            0.000010812557001717987,
                                            0.000009342900523897496,
                                            0.000006150702322921947,
                                            0.0000059886575325129865,
                                            0.000005498605084159475,
                                            0.000003995717941001481,
                                            0.0000032775000742973903,
                                            0.0000028855301359709262,
                                            0.0000019605162031380297,
                                            0.0000014165929483750395,
                                            0.0000022364179384989913,
                                            0.0000017962255940452698,
                                            0.0000011126314656793868,
                                            0.0000011050290509434513,
                                            9.966432062032127e-7,
                                            6.450828825832478e-7,
                                            3.54486908649837e-7,
                                            2.7880459923732004e-7,
                                            4.940262447461485e-7,
                                            0.0000012381998496201196,
                                            0.000001304154236620586,
                                            6.75844169299028e-7,
                                            3.10884015374685e-7,
                                            2.1287041066311851e-7,
                                            1.9424118979580185e-7,
                                            1.6411544345382167e-7,
                                            9.332752636329045e-8,
                                            5.134414021376599e-8,
                                            5.1166986782952284e-8,
                                            5.845325602368834e-8,
                                            5.3798523212689187e-8,
                                            6.484389753619313e-8,
                                            1.056790347453429e-7,
                                            1.203264398744186e-7,
                                            1.3913732236497944e-7,
                                            1.2174188459765367e-7,
                                            1.2261082420542135e-7,
                                            9.918558756608076e-8,
                                            6.39844187320937e-8,
                                            4.122706916132035e-8,
                                            2.6038891202950776e-8,
                                            2.232586253023139e-8,
                                            2.5185778230324418e-8,
                                            1.360556437651761e-8,
                                            4.622771974244211e-9,
                                            4.14943278695401e-9,
                                            5.15653223245871e-9,
                                            4.781245666746203e-9,
                                            3.019974579437923e-9,
                                            1.0992454481384417e-9,
                                            5.553567432314832e-10,
                                            1.1609987728145033e-9,
                                            1.0713885577329219e-9,
                                            6.381614542361191e-10,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0,
                                            0
                                        ],
                                        "name": "K-means",
                                        "type": "scatter",
                                        "mode": "lines"
                                    },
                                    {
                                        "x": [
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31,
                                            32,
                                            33,
                                            34,
                                            35,
                                            36,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            43,
                                            44,
                                            45,
                                            46,
                                            47,
                                            48,
                                            49,
                                            50,
                                            51,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            59,
                                            60,
                                            61,
                                            62,
                                            63,
                                            64,
                                            65,
                                            66,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            75,
                                            76,
                                            77,
                                            78,
                                            79,
                                            80,
                                            81,
                                            82,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            91,
                                            92,
                                            93,
                                            94,
                                            95,
                                            96,
                                            97,
                                            98,
                                            99,
                                            100
                                        ],
                                        "y": [
                                            0.01284209279324075,
                                            0.0035490012818070495,
                                            0.0015424203763065546,
                                            0.0007023534179944647,
                                            0.00032141140282421904,
                                            0.00020208167864184737,
                                            0.0001381303722996982,
                                            0.00009544405960998717,
                                            0.00008142908124672901,
                                            0.00008149960605887199,
                                            0.00006619616475857237,
                                            0.00005219975851681463,
                                            0.000042352018965800126,
                                            0.00003673496065165552,
                                            0.000032892868314690626,
                                            0.000029561978205049078,
                                            0.00002401128228791613,
                                            0.00001823591596446933,
                                            0.000016963261711692296,
                                            0.00001544113003703121,
                                            0.000014133278249523623,
                                            0.00001502867678571107,
                                            0.000012470178411719962,
                                            0.000010710114409697574,
                                            0.000009863451600086032,
                                            0.000010283920118297346,
                                            0.000012075933856318943,
                                            0.000011068402141902606,
                                            0.000008414751832549333,
                                            0.000008020904852436977,
                                            0.000006699556297572878,
                                            0.000005882599269011607,
                                            0.00000503604144537137,
                                            0.0000041809551780368215,
                                            0.000004606720849363588,
                                            0.000004486081558660593,
                                            0.000004681546298044431,
                                            0.000004938525537758615,
                                            0.000005409289020239655,
                                            0.0000053220354904008615,
                                            0.0000038299485722835536,
                                            0.000003494738784456941,
                                            0.0000031333704712359356,
                                            0.000002967068771082132,
                                            0.000002978285540761877,
                                            0.000002897523803023494,
                                            0.0000027282047911879326,
                                            0.0000028871807574749886,
                                            0.000002380393652502699,
                                            0.000002264831552332286,
                                            0.0000015057289560263531,
                                            0.0000018112107631647334,
                                            0.0000015967867427850446,
                                            0.0000011819732978791964,
                                            9.426203255481769e-7,
                                            8.015596342156317e-7,
                                            4.3814145657405934e-7,
                                            0.0000011588290972919246,
                                            0.0000012202318700402226,
                                            0.000001315493820180924,
                                            2.88637455363866e-7,
                                            1.4239910622534935e-7,
                                            2.645742865035883e-7,
                                            4.4802294683898847e-7,
                                            7.928425117022242e-7,
                                            7.909848031631417e-7,
                                            9.27582704618457e-7,
                                            0.0000013596688331306284,
                                            9.193360858174293e-7,
                                            0.000001209572417792265,
                                            0.0000010978467776985579,
                                            0.0000014698663294079872,
                                            0.0000012789867315995962,
                                            7.838580289229458e-7,
                                            3.600521822737235e-7,
                                            4.0753981141519735e-7,
                                            9.83339398030053e-7,
                                            0.000001206281053225955,
                                            6.701149661281214e-7,
                                            6.283508596389986e-7,
                                            6.360251763488922e-7,
                                            5.859605410607482e-7,
                                            5.318885409125174e-7,
                                            2.9237467408932405e-7,
                                            5.094358902502094e-7,
                                            4.82679591264773e-7,
                                            2.6149708078765377e-7,
                                            2.3867072241820497e-7,
                                            3.395589319443726e-8,
                                            4.328569298481244e-7,
                                            4.38965437360439e-7,
                                            3.5478931890639553e-7,
                                            2.3771080078643925e-7,
                                            1.2604710301900024e-7,
                                            3.1974309451857086e-7,
                                            3.944415971970927e-7,
                                            5.14153897249181e-7,
                                            6.318657010465079e-7,
                                            6.096215786760562e-7
                                        ],
                                        "name": "K-harmonic means",
                                        "type": "scatter",
                                        "mode": "lines"
                                    },
                                    {
                                        "type": "scatter",
                                        "mode": "lines",
                                        "x": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6,
                                            7,
                                            8,
                                            9,
                                            10,
                                            11,
                                            12,
                                            13,
                                            14,
                                            15,
                                            16,
                                            17,
                                            18,
                                            19,
                                            20,
                                            21,
                                            22,
                                            23,
                                            24,
                                            25,
                                            26,
                                            27,
                                            28,
                                            29,
                                            30,
                                            31,
                                            32,
                                            33,
                                            34,
                                            35,
                                            36,
                                            37,
                                            38,
                                            39,
                                            40,
                                            41,
                                            42,
                                            43,
                                            44,
                                            45,
                                            46,
                                            47,
                                            48,
                                            49,
                                            50,
                                            51,
                                            52,
                                            53,
                                            54,
                                            55,
                                            56,
                                            57,
                                            58,
                                            59,
                                            60,
                                            61,
                                            62,
                                            63,
                                            64,
                                            65,
                                            66,
                                            67,
                                            68,
                                            69,
                                            70,
                                            71,
                                            72,
                                            73,
                                            74,
                                            75,
                                            76,
                                            77,
                                            78,
                                            79,
                                            80,
                                            81,
                                            82,
                                            83,
                                            84,
                                            85,
                                            86,
                                            87,
                                            88,
                                            89,
                                            90,
                                            91,
                                            92,
                                            93,
                                            94,
                                            95,
                                            96,
                                            97,
                                            98,
                                            99,
                                            100
                                        ],
                                        "y": [
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001,
                                            0.0001
                                        ],
                                        "name": "stop condition"
                                    }
                                ],
                                "layout": {
                                    "width": 600,
                                    "height": 400,
                                    "font": {
                                        "size": 15
                                    },
                                    "margin": {
                                        "l": 80,
                                        "r": 4,
                                        "b": 40,
                                        "t": 50
                                    },
                                    "yaxis": {
                                        "title": {
                                            "text": "Δ MSE",
                                            "standoff": 20
                                        }
                                    },
                                    "xaxis": {
                                        "title": "number of iterations"
                                    },
                                    "title": {
                                        "text": "MSE change between iterations"
                                    }
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Benchmark stop condition"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "import fs from 'fs';\nimport assert from 'assert/strict';\nimport loadDataset from './loadDataset';\nimport { KMeans, RandomSwap, KHarmonicMeans } from './clustering/clustering';\nimport path from 'path';\nimport copy from 'deepcopy';\n\nconst benchmarkStopConditionResults = loadOrGenerateReport({\n    loadFromFile: false,\n    filePath: './results/stopCondition.json',\n    generationFunc: () => {\n        const numCenters = 6,\n            maxSamples = 5000,\n            numInits = 4,\n            numRandomSwapRepsPerInit = 4,\n            dimensions = 2,\n            deltaVarianceThreshold = 1e-4;\n\n        let results = [];\n\n        const inits =\n            // array of initializations\n            Array(numInits)\n                .fill()\n                .map(() =>\n                    //array of cluster centers\n                    Array(numCenters)\n                        .fill()\n                        .map(() =>\n                            // iterate over coordinates\n                            Array(dimensions)\n                                .fill()\n                                .map(\n                                    // uniform random initialization for each coordinate\n                                    () => Math.random()\n                                )\n                        )\n                );\n\n        const datasetsPath = './datasets/',\n            filePaths = fs\n                .readdirSync(datasetsPath)\n                .map((filePath) => path.join(datasetsPath, filePath));\n\n        const arrLaunchParams = [];\n\n        for (const filePath of filePaths) {\n            const samples = loadDataset({\n                path: filePath,\n                maxSamples: maxSamples,\n            });\n\n            assert.equal(samples[0].length, dimensions);\n\n            for (const initCenters of inits) {\n                arrLaunchParams.push({\n                    samples: samples,\n                    initCenters: initCenters,\n                });\n            }\n        }\n\n        let lastPercent = 0;\n\n        for (const launchId in arrLaunchParams) {\n            const { samples, initCenters } = arrLaunchParams[launchId];\n\n            const stopCondition = {\n                deltaVariance: deltaVarianceThreshold,\n                failedSwaps: 0,\n            };\n\n            results = results.concat(\n                new KMeans({\n                    samples: samples,\n                    attribution: samples.map(() => 0),\n                    centers: copy(initCenters),\n                    numIterations: stopCondition,\n                }).runClustering()\n            );\n\n            results = results.concat(\n                new KHarmonicMeans({\n                    samples: samples,\n                    attribution: samples.map(() => 0),\n                    centers: copy(initCenters),\n                    numIterations: stopCondition,\n                    weights: samples.map(() => initCenters[0].map(() => -1)),\n                }).runClustering()\n            );\n\n            for (const failedSwaps of [0, 1, 2, 3, 4, 5]) {\n                const stopCondition = {\n                    deltaVariance: deltaVarianceThreshold,\n                    failedSwaps: failedSwaps,\n                };\n\n                for (const _ of Array(numRandomSwapRepsPerInit)) {\n                    results = results.concat(\n                        new RandomSwap({\n                            samples: samples,\n                            attribution: samples.map(() => 0),\n                            centers: copy(initCenters),\n                            numIterations: stopCondition,\n                        }).runClustering()\n                    );\n                }\n            }\n\n            const percentFinished = (launchId / arrLaunchParams.length) * 100;\n            if (percentFinished > lastPercent + 1) {\n                console.log(\n                    `progress: ${percentFinished.toFixed(2).padStart(5)}%    ${\n                        new Date().toString().split(' ')[4]\n                    }`\n                );\n\n                lastPercent = percentFinished;\n            }\n        }\n\n        console.log('');\n        console.log('finished!');\n\n        return results;\n    },\n});\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stderr",
                            "value": [
                                "Debugger ending on ws://127.0.0.1:39165/08643322-808a-4c6e-ae2c-af0e21fc3bbd",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.error",
                            "value": {
                                "name": "unknown",
                                "message": "unknown",
                                "stack": "\tat S.onMessage (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:230057)\n\tat O.<anonymous> (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:226799)\n\tat O.emit (events.js:315:20)\n\tat e.exports.j (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:281666)\n\tat e.exports.emit (events.js:315:20)\n\tat e.exports.dataMessage (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:262817)\n\tat e.exports.getData (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:261999)\n\tat e.exports.startLoop (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:258860)\n\tat e.exports._write (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:258215)\n\tat writeOrBuffer (internal/streams/writable.js:358:12)\n\tat e.exports.Writable.write (internal/streams/writable.js:303:10)\n\tat Socket.U (/home/madcake/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/index.js:2:282192)\n\tat Socket.emit (events.js:315:20)\n\tat addChunk (internal/streams/readable.js:309:12)\n\tat readableAddChunk (internal/streams/readable.js:284:9)\n\tat Socket.Readable.push (internal/streams/readable.js:223:10)\n\tat TCP.onStreamRead (internal/stream_base_commons.js:188:23)"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}