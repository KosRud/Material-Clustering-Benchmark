{
    "cells": [
        {
            "language": "javascript",
            "source": [
                "const sharedLayout = {\n    width: 600,\n    height: 400,\n    font: {\n        size: 15,\n    },\n    margin: {\n        l: 80,\n        r: 4,\n        b: 40,\n        t: 50, // for title\n    },\n};"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "import { Kmeans } from './clustering.ts';\nimport fs from 'fs';\nimport { zip } from 'pythonic';\n\nconst samples = [\n    // build array from iterator\n    ...zip(\n        // transpose\n        ...fs\n            .readFileSync('./datasets/Birch/Birch1.txt', 'utf-8')\n            // get rows\n            .split('\\n')\n            .map(\n                // split columns by space\n                (line) =>\n                    line\n                        .split(' ')\n                        // drop empty columns\n                        .filter((linePart) => linePart != '')\n            )\n            // drop rows with invalid number of columns (e.g. empty)\n            .filter((row) => row.length == 2)\n    ),\n];\n\nconst numSamples = samples[0].length,\n    numClusters = 6,\n    centers = Array(numSamples);\n\nconst attribution = Array(numSamples).map(() =>\n    Math.floor(Math.random() * numClusters)\n);\n"
            ],
            "outputs": []
        }
    ]
}